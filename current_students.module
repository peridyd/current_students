<?php 
/**
 * Implements hook_help
 * 
 * Displays help and module information
 * @param path
 * 	Which path of the site we're using to display help
 * @param arg
 * 	Array that holds the current path as returned from the arg() function
 */
function current_students_help($path, $arg) {
	switch ($path) {
		case "admin/help#current_students":
			return '<p>' . t("Imports institutional student data into the Writing Center modules.") . '</p>';
			break;
	}
}

/**
 * Implements hook_clock_info()
 */
function current_students_block_info() {
	$blocks['current_students'] = array(
		//The name that will appear in the block list.
		'info' => t('Current Students active'),
		// default setting
		'cache'=> DRUPAL_CACHE_PER_ROLE,
	);
	return $blocks;
}

/**
 * Implements hook_user_login
 * 1. First checks for the account information and attempts to match the account information with current_student data
 * 2. If the student data exists and hasn't recently been imported into yc_patron, then import/update the information
 * 3. If the student data exists, then set the student role
 * 4. Log the account creation or update via Watchdog
 * 5. If account already exists, then do nothing.
 * 
 */
function current_students_user_login(&$edit, $account) {
	global $user;
	$userID = '';
	$ONID = '';
	$count = 0;
	$userID = $user->uid;
	drupal_set_message(t('Your user ID is: ' .$userID .'.'), 'status');
	//
	//my first query using the Drupal database API
	$result = db_select('cas_user', 'cas')
		->addTag('node_access')
		->fields('cas', array('cas_name'))
		->condition('cas.uid', $userID)
		->execute();
	foreach ($result as $row) {
		$ONID = $row->cas_name;
	}
	if (($ONID == '') || (strlen($ONID) == 0)) { //Not an OSU user. Likely an account created by an administrator
		// do nothing
		return;
	} else {
		// is this a new or a returning user?
		// check yc_patron for the answer
		$result = db_query('Select count (*) as count from {patron} p Where p.ONID = :ONID',
			array(':ONID' => $ONID));
		foreach ($result as $row) {
			$count = $row->count;
		}
	}
}